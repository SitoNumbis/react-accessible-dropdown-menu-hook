(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(93)),p={title:"Type parameters"},s={unversionedId:"design/type-parameters",id:"design/type-parameters",isDocsHomePage:!1,title:"Type parameters",description:"You can customize the behavior with optional type parameters.",source:"@site/docs/design/type-parameters.md",sourceDirName:"design",slug:"/design/type-parameters",permalink:"/react-accessible-dropdown-menu-hook/docs/design/type-parameters",editUrl:"https://github.com/sparksuite/react-accessible-dropdown-menu-hook/edit/master/website/docs/design/type-parameters.md",version:"current",frontMatter:{title:"Type parameters"},sidebar:"default",previous:{title:"Options",permalink:"/react-accessible-dropdown-menu-hook/docs/design/options"}},i=[],c={toc:i};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You can customize the behavior with optional type parameters."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},"Type constraint"),Object(o.b)("th",{parentName:"tr",align:"left"},"Default"),Object(o.b)("th",{parentName:"tr",align:"left"},"Possible values"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("inlineCode",{parentName:"td"},"HTMLElement")),Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("inlineCode",{parentName:"td"},"HTMLButtonElement")),Object(o.b)("td",{parentName:"tr",align:"left"},"Any type that extends ",Object(o.b)("inlineCode",{parentName:"td"},"HTMLElement"))))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-tsx"},"const { buttonProps, itemProps, isOpen } = useDropdownMenu<HTMLDivElement>(3);\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-tsx"},"<div {...buttonProps} id='menu-button'>\n    Example\n</div>\n")))}b.isMDXComponent=!0}}]);